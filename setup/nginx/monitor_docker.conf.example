upstream flower_server { # bind to flower container
    server brif_flower:5555 fail_timeout=0;
}


upstream pgadmin_server { # bind to pgadmin container
    server brif_pgadmin:80 fail_timeout=0;
}


server { # flower server

    server_name flower.example.com; # managed by Certbot
    client_max_body_size 4G;
    keepalive_timeout 5;
    add_header 'Content-Security-Policy' 'upgrade-insecure-requests';

    location / {
          try_files $uri @proxy_to_flower;
    }

    location @proxy_to_flower {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://flower_server;
    }

    include /etc/nginx/certificate.conf;

}


server { # pgadmin server

    server_name pgadmin.example.com; # managed by Certbot
    client_max_body_size 4G;
    keepalive_timeout 5;
    add_header 'Content-Security-Policy' 'upgrade-insecure-requests';

    location / {
          try_files $uri @proxy_to_pgadmin;
    }

    location @proxy_to_pgadmin {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_pass http://pgadmin_server;
    }

    include /etc/nginx/certificate.conf;

}


server {
    if ($host = flower.example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name flower.example.com;
    listen 80;
    return 404; # managed by Certbot
}


server {
    if ($host = pgadmin.example.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name pgadmin.example.com;
    listen 80;
    return 404; # managed by Certbot
}
