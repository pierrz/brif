# Main compose setup

##############
# ENV & VOLUMES
x-brif-common:
  &brif-common
  environment:
    &brif-common-env
    BASE_URL: "${BASE_URL}"
    APP_SUBDOMAIN: "${APP_SUBDOMAIN}"
    APP_PORT: "${APP_PORT}"
    SECRET_KEY: "${SECRET_KEY}"
    CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
    CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
    DB_NAME: "${DB_NAME}"
    DB_USER: "${DB_USER}"
    DB_PASSWORD: "${DB_PASSWORD}"
    CANTALOUPE_PORT: "${CANTALOUPE_PORT}"
    API_IMAGE_BACKEND: "${API_IMAGE_BACKEND}"
  volumes:
    - ${DATA_DIR}:/opt/data       # change to the project's data location
  links:
    - "cantaloupe:http"

volumes:
  brif_postgres_db_v:
    name: brif_postgres_db_v


services:
  
##############
# API SERVICES

  api_test:
    <<: *brif-common
    container_name: brif_api_test
    image: brif_api_img
    build:
      context: .
      dockerfile: setup/app/Dockerfile
    command: pytest -vv
    depends_on:
      - cantaloupe
      - db
      - celery

  api_prod:
    <<: *brif-common
    container_name: brif_api_prod
    image: brif_api_img
    command: uvicorn main:app --host 0.0.0.0 --reload
    depends_on:
      - api_test
    ports:
      - "${APP_PORT}:${APP_PORT}"

#####################
# SUPPORTING SERVICES

  cantaloupe:
    container_name: brif_cantaloupe
    image: brif_cantaloupe
    build:
      context: .
      dockerfile: setup/cantaloupe/Dockerfile
    restart: always
    volumes:
      - ${LOGS_DIR}/cantaloupe:/cantaloupe/logs
      # CHANGE WITH CAUTION the next mount as it is tied to cantaloupe/properties
      # via FilesystemSource.BasicLookupStrategy.path_prefix
      - ${CONTENT_DIR}:/mnt/directories
    ports:
      - "${CANTALOUPE_PORT}"

  celery:
    container_name: brif_celery
    image: celery_app_img
    build:
      context: .
      dockerfile: setup/celery/Dockerfile
    volumes:
      - ${LOGS_DIR}/celery:/opt/celery_app/logs
      - ${DATA_DIR}:/opt/data       # change to the project's data location
    environment:
      <<: *brif-common-env
    depends_on:
      - rabbitmq
  
  rabbitmq:
    container_name: brif_rabbitmq
    image: rabbitmq:3.8-management
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ${LOGS_DIR}/rabbitmq:/var/log/rabbitmq

  db:
    container_name: brif_postgres
    build:
      context: .
      dockerfile: setup/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - brif_postgres_db_v:/var/lib/postgresql/data
      - ${LOGS_DIR}/postgres:/var/log/postgresql

# ###############
# # PROXY SERVICE

#   nginx:
#     image: nginx:1.27.1
#     container_name: brif_nginx
#     volumes:
#       - ./setup/nginx/brif_docker.conf:/etc/nginx/sites-enabled/brif_docker.conf:ro
#       - ./setup/nginx/docker_base.conf:/etc/nginx/nginx.conf:ro
#       - ./setup/nginx/certificate.conf:/etc/nginx/certificate.conf:ro
#       - ${LOGS_DIR}/nginx:/var/log/nginx
#       # CERTIFICATES (requires the whole directory mounted)
#       - /etc/letsencrypt:/etc/letsencrypt:ro
#     ports:
#       - "80:80"
#       - "443:443"
#     depends_on:
#       - api_prod
#     profiles:
#       - live_prod
